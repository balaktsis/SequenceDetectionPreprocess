version: '3.7'
services:
  preprocess:
    image: mavroudo/siesta-preprocess:2.2
    ports:
      - "8000:8000"
    networks:
      - siesta-net
    environment:
      cassandra_host: cassandra
      cassandra_port: 9042
      cassandra_user: cassandra
      cassandra_pass: cassandra
      cassandra_keyspace_name: siesta
      cassandra_replication_class: SimpleStrategy
      cassandra_replication_rack: replication_factor
      cassandra_replication_factor: 3
      cassandra_write_consistency_level: ONE
      cassandra_gc_grace_seconds: 864000
      s3accessKeyAws: minioadmin
      s3ConnectionTimeout: 600000
      s3endPointLoc: http://minio:9000
      s3secretKeyAws: minioadmin


  minio:
    container_name: minio
    image: minio/minio:RELEASE.2023-11-01T01-57-10Z
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data
    networks:
      - siesta-net

#  cassandra:
#    image: 'cassandra:4.0'
#    container_name: cassandra
#    ports:
#      - '7000:7000'
#      - '9042:9042'
#    volumes:
#      - './cassandra/data:/var/lib/cassandra'
#    env_file:
#      - .env
#    networks:
#      - siesta-net


#    build:
#      context: ../
#      dockerfile: dockerbase/preprocessWithAPI.Dockerfile
#    ports:
#      - "8000:8000"
#      - "8080:8080"
#    volumes:
#      - ../pythonAPI/uploadedfiles:/app/pythonAPI/uploadedfiles
#      - ../pythonAPI/dbSQL:/app/pythonAPI/dbSQL
#    networks:
#      - siesta-net
#
#networks:
#  siesta-net:
#    external:
#      name: siesta-net

networks:
  siesta-net:
    name: siesta-net
    external: true

volumes:
  minio_storage: {}
